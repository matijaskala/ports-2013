Description: Add a new dbus property to the nautilus'
 "org.freedesktop.FileManager1" dbus interface where it stores the lists of
 opened locations referenced by their parent nautilus window XID.

Bug-Ubuntu: https://bugs.launchpad.net/unity/+bug/887449
Forwarded: no
Author: Marco Trevisan <marco@ubuntu.com>

Index: nautilus-3.18.2/data/freedesktop-dbus-interfaces.xml
===================================================================
--- nautilus-3.18.2.orig/data/freedesktop-dbus-interfaces.xml
+++ nautilus-3.18.2/data/freedesktop-dbus-interfaces.xml
@@ -31,5 +31,6 @@
       <arg type='s' name='StartupId' direction='in'/>
     </method>
     <property name="OpenLocations" type="as" access="read"/>
+    <property name="XUbuntuOpenLocationsXids" type="a{uas}" access="read"/>
   </interface>
 </node>
Index: nautilus-3.18.2/src/nautilus-application.c
===================================================================
--- nautilus-3.18.2.orig/src/nautilus-application.c
+++ nautilus-3.18.2/src/nautilus-application.c
@@ -1120,8 +1120,8 @@ nautilus_application_quit_mainloop (GApp
 	G_APPLICATION_CLASS (nautilus_application_parent_class)->quit_mainloop (app);
 }
 
-static void
-update_dbus_opened_locations (NautilusApplication *app)
+void
+nautilus_application_update_dbus_opened_locations (NautilusApplication *app)
 {
 	gint i;
 	GList *l, *sl;
@@ -1133,15 +1133,40 @@ update_dbus_opened_locations (NautilusAp
 
 	g_return_if_fail (NAUTILUS_IS_APPLICATION (app));
 
+	GVariantBuilder b;
+	GVariantBuilder wb;
+
+	g_variant_builder_init (&b, G_VARIANT_TYPE ("a{uas}"));
+
 	for (l = app->priv->windows; l != NULL; l = l->next) {
 		window = l->data;
 
+		g_variant_builder_init (&wb, G_VARIANT_TYPE ("as"));
+
+		NautilusWindowSlot *active_slot = nautilus_window_get_active_slot (window);
+
+		if (active_slot != NULL)
+		{
+			location = nautilus_window_slot_get_location (active_slot);
+
+			if (location != NULL) {
+				gchar *active_uri = g_file_get_uri (location);
+				g_variant_builder_add (&wb, "s", active_uri);
+				g_free (active_uri);
+			}
+		}
+
 		for (sl = nautilus_window_get_slots (window); sl; sl = sl->next) {
 			NautilusWindowSlot *slot = sl->data;
                         location = nautilus_window_slot_get_location (slot);
 
 			if (location != NULL) {
 			        gchar *uri = g_file_get_uri (location);
+
+				if (slot != active_slot) {
+					g_variant_builder_add (&wb, "s", uri);
+				}
+
 				GList *found = g_list_find_custom (locations, uri, (GCompareFunc) g_strcmp0);
 
 				if (!found) {
@@ -1152,6 +1177,21 @@ update_dbus_opened_locations (NautilusAp
 				}
 			}
 		}
+
+		if (gtk_widget_get_realized (GTK_WIDGET (l->data))) {
+			guint32 window_id = 0;
+			GdkWindow *gdk_win = gtk_widget_get_window (GTK_WIDGET (l->data));
+#ifdef GDK_WINDOWING_X11
+			if (GDK_IS_X11_WINDOW (gdk_win)) {
+				window_id = gdk_x11_window_get_xid (gdk_win);
+			} else {
+				window_id = GPOINTER_TO_UINT(gdk_win);
+			}
+#endif
+			g_variant_builder_add (&b, "{uas}", window_id, &wb);
+		}
+
+		g_variant_builder_clear (&wb);
 	}
 
 	locations_array = g_new (gchar*, locations_size + 1);
@@ -1165,6 +1205,8 @@ update_dbus_opened_locations (NautilusAp
 
 	nautilus_freedesktop_dbus_set_open_locations (app->priv->fdb_manager,
 		                                      (const gchar**) locations_array);
+	nautilus_freedesktop_dbus_set_open_locations_xids (app->priv->fdb_manager,
+							   g_variant_builder_end (&b));
 
 	g_free (locations_array);
 	g_list_free_full (locations, g_free);
@@ -1172,10 +1214,17 @@ update_dbus_opened_locations (NautilusAp
 
 static void
 on_slot_location_changed (NautilusWindowSlot  *slot,
-                          GParamSpec          *pspec,
-                          NautilusApplication *application)
+			  GParamSpec          *pspec,
+			  NautilusApplication *application)
+{
+	nautilus_application_update_dbus_opened_locations (application);
+}
+
+static void
+on_slot_active_changed (NautilusWindowSlot *slot,
+			NautilusApplication *application)
 {
-	update_dbus_opened_locations (application);
+	nautilus_application_update_dbus_opened_locations (application);
 }
 
 static void
@@ -1184,10 +1233,11 @@ on_slot_added (NautilusWindow      *wind
 	       NautilusApplication *application)
 {
 	if (nautilus_window_slot_get_location (slot)) {
-		update_dbus_opened_locations (application);
+		nautilus_application_update_dbus_opened_locations (application);
 	}
 
 	g_signal_connect (slot, "notify::location", G_CALLBACK (on_slot_location_changed), application);
+	g_signal_connect (slot, "active", G_CALLBACK (on_slot_active_changed), application);
 }
 
 static void
@@ -1195,9 +1245,17 @@ on_slot_removed (NautilusWindow      *wi
 		 NautilusWindowSlot  *slot,
 		 NautilusApplication *application)
 {
-	update_dbus_opened_locations (application);
+	nautilus_application_update_dbus_opened_locations (application);
 
 	g_signal_handlers_disconnect_by_func (slot, on_slot_location_changed, application);
+	g_signal_handlers_disconnect_by_func (slot, on_slot_active_changed, application);
+}
+
+static void
+on_realize (GtkWidget           *widget,
+	    NautilusApplication *application)
+{
+	nautilus_application_update_dbus_opened_locations (application);
 }
 
 static void
@@ -1210,6 +1268,7 @@ nautilus_application_window_added (GtkAp
 
 	if (NAUTILUS_IS_WINDOW (window)) {
 		self->priv->windows = g_list_prepend (self->priv->windows, window);
+		g_signal_connect (window, "realize", G_CALLBACK (on_realize), app);
 		g_signal_connect (window, "slot-added", G_CALLBACK (on_slot_added), app);
 		g_signal_connect (window, "slot-removed", G_CALLBACK (on_slot_removed), app);
 	}
@@ -1225,6 +1284,7 @@ nautilus_application_window_removed (Gtk
 
 	if (NAUTILUS_IS_WINDOW (window)) {
 		self->priv->windows = g_list_remove_all (self->priv->windows, window);
+		g_signal_handlers_disconnect_by_func (window, on_realize, app);
 		g_signal_handlers_disconnect_by_func (window, on_slot_added, app);
 		g_signal_handlers_disconnect_by_func (window, on_slot_removed, app);
 	}
Index: nautilus-3.18.2/src/nautilus-freedesktop-dbus.c
===================================================================
--- nautilus-3.18.2.orig/src/nautilus-freedesktop-dbus.c
+++ nautilus-3.18.2/src/nautilus-freedesktop-dbus.c
@@ -152,6 +152,9 @@ bus_acquired_cb (GDBusConnection *conn,
 			  G_CALLBACK (skeleton_handle_show_item_properties_cb), fdb);
 
 	g_dbus_interface_skeleton_export (G_DBUS_INTERFACE_SKELETON (fdb->skeleton), conn, NAUTILUS_FDO_DBUS_PATH, NULL);
+
+	NautilusApplication *application = NAUTILUS_APPLICATION (g_application_get_default ());
+	nautilus_application_update_dbus_opened_locations (application);
 }
 
 static void
@@ -216,7 +219,18 @@ nautilus_freedesktop_dbus_set_open_locat
 {
 	g_return_if_fail (NAUTILUS_IS_FREEDESKTOP_DBUS (fdb));
 
-	nautilus_freedesktop_file_manager1_set_open_locations (fdb->skeleton, locations);
+	if (fdb->skeleton)
+		nautilus_freedesktop_file_manager1_set_open_locations (fdb->skeleton, locations);
+}
+
+void
+nautilus_freedesktop_dbus_set_open_locations_xids (NautilusFreedesktopDBus *fdb,
+						   GVariant *locations)
+{
+	g_return_if_fail (NAUTILUS_IS_FREEDESKTOP_DBUS (fdb));
+
+	if (fdb->skeleton)
+		nautilus_freedesktop_file_manager1_set_xubuntu_open_locations_xids (fdb->skeleton, locations);
 }
 
 /* Tries to own the org.freedesktop.FileManager1 service name */
Index: nautilus-3.18.2/src/nautilus-freedesktop-dbus.h
===================================================================
--- nautilus-3.18.2.orig/src/nautilus-freedesktop-dbus.h
+++ nautilus-3.18.2/src/nautilus-freedesktop-dbus.h
@@ -47,5 +47,6 @@ GType nautilus_freedesktop_dbus_get_type
 NautilusFreedesktopDBus * nautilus_freedesktop_dbus_new (void);
 
 void nautilus_freedesktop_dbus_set_open_locations (NautilusFreedesktopDBus *fdb, const gchar **locations);
+void nautilus_freedesktop_dbus_set_open_locations_xids (NautilusFreedesktopDBus *fdb, GVariant *locations);
 
 #endif /* __NAUTILUS_FREEDESKTOP_DBUS_H__ */
Index: nautilus-3.18.2/src/nautilus-application.h
===================================================================
--- nautilus-3.18.2.orig/src/nautilus-application.h
+++ nautilus-3.18.2/src/nautilus-application.h
@@ -85,4 +85,6 @@ void nautilus_application_edit_bookmarks
 
 GtkWidget * nautilus_application_connect_server (NautilusApplication *application,
 						 NautilusWindow      *window);
+
+void nautilus_application_update_dbus_opened_locations (NautilusApplication *app);
 #endif /* __NAUTILUS_APPLICATION_H__ */
