Description: Add a new dbus property to the nautilus'
 "org.freedesktop.FileManager1" dbus interface where it stores the lists of
 opened locations referenced by their parent nautilus window XID.

Bug-Ubuntu: https://bugs.launchpad.net/unity/+bug/887449
Forwarded: no
Author: Marco Trevisan <marco@ubuntu.com>

---
 data/freedesktop-dbus-interfaces.xml |    1 
 src/nautilus-application.c           |   78 ++++++++++++++++++++++++++++++++---
 src/nautilus-application.h           |    2 
 src/nautilus-freedesktop-dbus.c      |   21 ++++++++-
 src/nautilus-freedesktop-dbus.h      |    1 
 5 files changed, 96 insertions(+), 7 deletions(-)

--- a/data/freedesktop-dbus-interfaces.xml
+++ b/data/freedesktop-dbus-interfaces.xml
@@ -31,5 +31,6 @@
       <arg type='s' name='StartupId' direction='in'/>
     </method>
     <property name="OpenLocations" type="as" access="read"/>
+    <property name="XUbuntuOpenLocationsXids" type="a{uas}" access="read"/>
   </interface>
 </node>
--- a/src/nautilus-application.c
+++ b/src/nautilus-application.c
@@ -1338,8 +1338,8 @@ nautilus_application_dbus_unregister (GA
     }
 }
 
-static void
-update_dbus_opened_locations (NautilusApplication *self)
+void
+nautilus_application_update_dbus_opened_locations (NautilusApplication *self)
 {
     NautilusApplicationPrivate *priv;
     gint i;
@@ -1352,6 +1352,11 @@ update_dbus_opened_locations (NautilusAp
 
     g_return_if_fail (NAUTILUS_IS_APPLICATION (self));
 
+    GVariantBuilder b;
+    GVariantBuilder wb;
+
+    g_variant_builder_init (&b, G_VARIANT_TYPE ("a{uas}"));
+
     priv = nautilus_application_get_instance_private (self);
 
     /* Children of nautilus application could not handle the dbus, so don't
@@ -1365,6 +1370,22 @@ update_dbus_opened_locations (NautilusAp
     {
         window = l->data;
 
+        g_variant_builder_init (&wb, G_VARIANT_TYPE ("as"));
+
+        NautilusWindowSlot *active_slot = nautilus_window_get_active_slot (window);
+
+        if (active_slot != NULL)
+        {
+            location = nautilus_window_slot_get_location (active_slot);
+
+                if (location != NULL)
+                {
+                    gchar *active_uri = g_file_get_uri (location);
+                    g_variant_builder_add (&wb, "s", active_uri);
+                    g_free (active_uri);
+                }
+         }
+
         for (sl = nautilus_window_get_slots (window); sl; sl = sl->next)
         {
             NautilusWindowSlot *slot = sl->data;
@@ -1373,6 +1394,12 @@ update_dbus_opened_locations (NautilusAp
             if (location != NULL)
             {
                 gchar *uri = g_file_get_uri (location);
+
+                if (slot != active_slot)
+                {
+                    g_variant_builder_add (&wb, "s", uri);
+                }
+
                 GList *found = g_list_find_custom (locations, uri, (GCompareFunc) g_strcmp0);
 
                 if (!found)
@@ -1386,6 +1413,26 @@ update_dbus_opened_locations (NautilusAp
                 }
             }
         }
+
+   if (gtk_widget_get_realized (GTK_WIDGET (l->data)))
+   {
+       guint32 window_id = 0;
+       GdkWindow *gdk_win = gtk_widget_get_window (GTK_WIDGET (l->data));
+#ifdef GDK_WINDOWING_X11
+       if (GDK_IS_X11_WINDOW (gdk_win))
+       {
+           window_id = gdk_x11_window_get_xid (gdk_win);
+       }
+       else
+       {
+           window_id = GPOINTER_TO_UINT(gdk_win);
+       }
+#endif
+       g_variant_builder_add (&b, "{uas}", window_id, &wb);
+    }
+
+    g_variant_builder_clear (&wb);
+
     }
 
     locations_array = g_new (gchar *, locations_size + 1);
@@ -1401,6 +1448,9 @@ update_dbus_opened_locations (NautilusAp
     nautilus_freedesktop_dbus_set_open_locations (priv->fdb_manager,
                                                   (const gchar **) locations_array);
 
+    nautilus_freedesktop_dbus_set_open_locations_xids (priv->fdb_manager,
+                                                       g_variant_builder_end (&b));
+
     g_free (locations_array);
     g_list_free_full (locations, g_free);
 }
@@ -1410,7 +1460,14 @@ on_slot_location_changed (NautilusWindow
                           GParamSpec          *pspec,
                           NautilusApplication *self)
 {
-    update_dbus_opened_locations (self);
+    nautilus_application_update_dbus_opened_locations (self);
+}
+
+static void
+on_slot_active_changed (NautilusWindowSlot *slot,
+                        NautilusApplication *self)
+{
+    nautilus_application_update_dbus_opened_locations (self);
 }
 
 static void
@@ -1420,7 +1477,7 @@ on_slot_added (NautilusWindow      *wind
 {
     if (nautilus_window_slot_get_location (slot))
     {
-        update_dbus_opened_locations (self);
+        nautilus_application_update_dbus_opened_locations (self);
     }
 
     g_signal_connect (slot, "notify::location", G_CALLBACK (on_slot_location_changed), self);
@@ -1431,9 +1488,16 @@ on_slot_removed (NautilusWindow      *wi
                  NautilusWindowSlot  *slot,
                  NautilusApplication *self)
 {
-    update_dbus_opened_locations (self);
+    nautilus_application_update_dbus_opened_locations (self);
+
+    g_signal_handlers_disconnect_by_func (slot, on_slot_active_changed, self);
+}
 
-    g_signal_handlers_disconnect_by_func (slot, on_slot_location_changed, self);
+static void
+on_realize (GtkWidget           *widget,
+            NautilusApplication *self)
+{
+    nautilus_application_update_dbus_opened_locations (self);
 }
 
 static void
@@ -1449,6 +1513,7 @@ nautilus_application_window_added (GtkAp
     if (NAUTILUS_IS_WINDOW (window))
     {
         priv->windows = g_list_prepend (priv->windows, window);
+        g_signal_connect (window, "realize", G_CALLBACK (on_realize), app);
         g_signal_connect (window, "slot-added", G_CALLBACK (on_slot_added), app);
         g_signal_connect (window, "slot-removed", G_CALLBACK (on_slot_removed), app);
     }
@@ -1468,6 +1533,7 @@ nautilus_application_window_removed (Gtk
     if (NAUTILUS_IS_WINDOW (window))
     {
         priv->windows = g_list_remove_all (priv->windows, window);
+        g_signal_handlers_disconnect_by_func (window, on_realize, app);
         g_signal_handlers_disconnect_by_func (window, on_slot_added, app);
         g_signal_handlers_disconnect_by_func (window, on_slot_removed, app);
     }
--- a/src/nautilus-application.h
+++ b/src/nautilus-application.h
@@ -89,6 +89,8 @@ void nautilus_application_search (Nautil
                                   const gchar         *uri,
                                   const gchar         *text);
 void nautilus_application_startup_common (NautilusApplication *application);
+
+void nautilus_application_update_dbus_opened_locations (NautilusApplication *app);
 G_END_DECLS
 
 #endif /* __NAUTILUS_APPLICATION_H__ */
--- a/src/nautilus-freedesktop-dbus.c
+++ b/src/nautilus-freedesktop-dbus.c
@@ -160,6 +160,9 @@ bus_acquired_cb (GDBusConnection *conn,
                       G_CALLBACK (skeleton_handle_show_item_properties_cb), fdb);
 
     g_dbus_interface_skeleton_export (G_DBUS_INTERFACE_SKELETON (fdb->skeleton), conn, NAUTILUS_FDO_DBUS_PATH, NULL);
+
+    NautilusApplication *application = NAUTILUS_APPLICATION (g_application_get_default ());
+    nautilus_application_update_dbus_opened_locations (application);
 }
 
 static void
@@ -226,7 +229,23 @@ nautilus_freedesktop_dbus_set_open_locat
 {
     g_return_if_fail (NAUTILUS_IS_FREEDESKTOP_DBUS (fdb));
 
-    nautilus_freedesktop_file_manager1_set_open_locations (fdb->skeleton, locations);
+
+    if (fdb->skeleton)
+    {
+        nautilus_freedesktop_file_manager1_set_open_locations (fdb->skeleton, locations);
+    }
+}
+
+void
+nautilus_freedesktop_dbus_set_open_locations_xids (NautilusFreedesktopDBus *fdb,
+                                                   GVariant *locations)
+{
+    g_return_if_fail (NAUTILUS_IS_FREEDESKTOP_DBUS (fdb));
+
+    if (fdb->skeleton)
+    {
+       nautilus_freedesktop_file_manager1_set_xubuntu_open_locations_xids (fdb->skeleton, locations);
+    }
 }
 
 /* Tries to own the org.freedesktop.FileManager1 service name */
--- a/src/nautilus-freedesktop-dbus.h
+++ b/src/nautilus-freedesktop-dbus.h
@@ -47,5 +47,6 @@ GType nautilus_freedesktop_dbus_get_type
 NautilusFreedesktopDBus * nautilus_freedesktop_dbus_new (void);
 
 void nautilus_freedesktop_dbus_set_open_locations (NautilusFreedesktopDBus *fdb, const gchar **locations);
+void nautilus_freedesktop_dbus_set_open_locations_xids (NautilusFreedesktopDBus *fdb, GVariant *locations);
 
 #endif /* __NAUTILUS_FREEDESKTOP_DBUS_H__ */
