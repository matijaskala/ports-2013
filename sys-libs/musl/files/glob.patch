--- a/include/glob.h
+++ b/include/glob.h
@@ -16,12 +16,17 @@
 
 #include <bits/alltypes.h>
 
+struct stat;
 typedef struct {
 	size_t gl_pathc;
 	char **gl_pathv;
 	size_t gl_offs;
 	int __dummy1;
-	void *__dummy2[5];
+	void (*gl_closedir) (void *);
+	struct dirent *(*gl_readdir) (void *);
+	void *(*gl_opendir) (const char *);
+	void *gl_lstat;
+	int (*gl_stat) (const char *__restrict, struct stat *__restrict);
 } glob_t;
 
 int  glob(const char *__restrict, int, int (*)(const char *, int), glob_t *__restrict);
@@ -31,6 +35,8 @@ void globfree(glob_t *);
 #define GLOB_NOESCAPE 0x40
 #define	GLOB_PERIOD   0x80
 
+#define	GLOB_ALTDIRFUNC  0x200
+
 #define GLOB_NOSPACE 1
 #define GLOB_ABORTED 2
 #define GLOB_NOMATCH 3
--- a/src/regex/glob.c
+++ b/src/regex/glob.c
@@ -30,7 +30,7 @@
 	return 0;
 }
 
-static int do_glob(char *buf, size_t pos, int type, char *pat, int flags, int (*errfunc)(const char *path, int err), struct match **tail)
+static int do_glob(char *buf, size_t pos, int type, char *pat, int flags, int (*errfunc)(const char *path, int err), struct match **tail, glob_t *restrict g)
 {
 	/* If GLOB_MARK is unused, we don't care about type. */
 	if (!type && !(flags & GLOB_MARK)) type = DT_REG;
@@ -94,7 +94,7 @@
 		 * determine its type. */
 		struct stat st;
 		if ((flags & GLOB_MARK) && type==DT_LNK) type = 0;
-		if (!type && stat(buf, &st)) {
+		if (!type && (!((flags & GLOB_ALTDIRFUNC) ? g->gl_stat(buf, &st) : stat(buf, &st)) && S_ISDIR(st.st_mode))) {
 			if (errno!=ENOENT && (errfunc(buf, errno) || (flags & GLOB_ERR)))
 				return GLOB_ABORTED;
 			return 0;
@@ -115,7 +115,7 @@
 			saved_sep = '\\';
 		}
 	}
-	DIR *dir = opendir(pos ? buf : ".");
+	DIR *dir = (flags & GLOB_ALTDIRFUNC) ? g->gl_opendir(pos ? buf : ".") : opendir(pos ? buf : ".");
 	if (!dir) {
 		if (errfunc(buf, errno) || (flags & GLOB_ERR))
 			return GLOB_ABORTED;
@@ -148,7 +148,7 @@
 
 		memcpy(buf+pos, de->d_name, l+1);
 		if (p2) *p2 = saved_sep;
-		int r = do_glob(buf, pos+l, de->d_type, p2 ? p2 : "", flags, errfunc, tail);
+		int r = do_glob(buf, pos+l, de->d_type, p2 ? p2 : "", flags, errfunc, tail, g);
 		if (r) {
 			closedir(dir);
 			return r;
@@ -202,7 +202,7 @@
 		char *p = strdup(pat);
 		if (!p) return GLOB_NOSPACE;
 		buf[0] = 0;
-		error = do_glob(buf, 0, 0, p, flags, errfunc, &tail);
+		error = do_glob(buf, 0, 0, p, flags, errfunc, &tail, g);
 		free(p);
 	}
 
