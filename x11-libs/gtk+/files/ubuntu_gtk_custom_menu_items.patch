From 6a9f2f5a779ede6da3fce693c1a2eed66c50f932 Mon Sep 17 00:00:00 2001
From: Lars Uebernickel <lars.uebernickel@canonical.com>
Date: Wed, 6 Nov 2013 14:48:19 +0100
Subject: [PATCH] Add UbuntuMenuItemFactory

UbuntuMenuItemFactory is an interface for creating widgets for menu
items in a GMenuModel that have an 'x-canonical-type' attribute.

It is needed by unity and should not be considered public API.
---
 gtk/Makefile.am             |  3 ++
 gtk/gtkmenushell.c          | 71 +++++++++++++++++++++++++++++++++++++++++++++
 gtk/gtkmenutrackeritem.c    | 16 ++++++++++
 gtk/gtkmenutrackeritem.h    |  4 +++
 gtk/ubuntu-private.h        | 32 ++++++++++++++++++++
 gtk/ubuntumenuitemfactory.c | 70 ++++++++++++++++++++++++++++++++++++++++++++
 gtk/ubuntumenuitemfactory.h | 61 ++++++++++++++++++++++++++++++++++++++
 7 files changed, 257 insertions(+)
 create mode 100644 gtk/ubuntu-private.h
 create mode 100644 gtk/ubuntumenuitemfactory.c
 create mode 100644 gtk/ubuntumenuitemfactory.h

Index: gtk+3.0-3.10.7/gtk/Makefile.am
===================================================================
--- gtk+3.0-3.10.7.orig/gtk/Makefile.am	2014-02-27 12:44:39.405779725 +0100
+++ gtk+3.0-3.10.7/gtk/Makefile.am	2014-02-27 12:44:39.397779725 +0100
@@ -176,6 +176,8 @@
 
 gtk_public_h_sources = 		\
 	gtk.h			\
+	ubuntu-private.h	\
+	ubuntumenuitemfactory.h	\
 	gtkx.h			\
 	gtk-a11y.h		\
 	gtkaboutdialog.h	\
@@ -601,6 +603,7 @@
 
 gtk_base_c_sources = 		\
 	$(deprecated_c_sources)	\
+	ubuntumenuitemfactory.c	\
 	gtkactionmuxer.c	\
 	gtkactionobserver.c	\
 	gtkactionobservable.c	\
Index: gtk+3.0-3.10.7/gtk/gtkmenushell.c
===================================================================
--- gtk+3.0-3.10.7.orig/gtk/gtkmenushell.c	2014-02-27 12:44:39.405779725 +0100
+++ gtk+3.0-3.10.7/gtk/gtkmenushell.c	2014-02-27 12:45:00.689780434 +0100
@@ -81,6 +81,8 @@
 
 #include "a11y/gtkmenushellaccessible.h"
 
+#include "ubuntu-private.h"
+
 
 #define MENU_SHELL_TIMEOUT   500
 #define MENU_POPUP_DELAY     225
@@ -2041,6 +2043,58 @@
   gtk_widget_destroy (child);
 }
 
+static GtkWidget *
+create_custom_menu_item (GMenuItem   *item,
+                         GtkWidget   *parent,
+                         const gchar *action_namespace)
+{
+  gchar *type;
+  GActionGroup *actions;
+  GtkMenuItem *widget = NULL;
+  GList *it;
+
+  g_menu_item_get_attribute (item, "x-canonical-type", "s", &type);
+
+  if (action_namespace)
+    {
+      gchar *action;
+
+      /* Rewrite the menu item to include the fully qualified action
+       * name to make writing widgets easier. This won't break, as
+       * we don't use the tracker item for custom items.
+       */
+      if (g_menu_item_get_attribute (item, "action", "s", &action))
+        {
+          gchar *fullname;
+
+          fullname = g_strconcat (action_namespace, ".", action, NULL);
+          g_menu_item_set_attribute (item, "action", "s", fullname);
+
+          g_free (fullname);
+          g_free (action);
+        }
+    }
+
+  /* Passing the parent muxer is wrong, but we'll only have access
+   * to the menuitem's muxer after the widget has been created.
+   * Thus we'd need some other form of passing the action group to
+   * the widget, which would complicate things for no practical
+   * reason: the panel service is the only consumer of this API and
+   * it will never call gtk_widget_insert_action_group() on the
+   * returned menu item.
+   */
+  actions = G_ACTION_GROUP (_gtk_widget_get_action_muxer (parent));
+
+  for (it = ubuntu_menu_item_factory_get_all (); it != NULL && widget == NULL; it = it->next)
+    widget = ubuntu_menu_item_factory_create_menu_item (it->data, type, item, actions);
+
+  if (widget == NULL)
+    g_warning ("Cannot create custom menu item of type '%s'", type);
+
+  g_free (type);
+  return GTK_WIDGET (widget);
+}
+
 static void
 gtk_menu_shell_tracker_insert_func (GtkMenuTrackerItem *item,
                                     gint                position,
@@ -2048,6 +2102,9 @@
 {
   GtkMenuShell *menu_shell = user_data;
   GtkWidget *widget;
+  GMenuItem *menuitem;
+
+  menuitem = gtk_menu_tracker_item_get_menu_item (item);
 
   if (gtk_menu_tracker_item_get_is_separator (item))
     {
@@ -2107,6 +2164,18 @@
 
       gtk_widget_show (widget);
     }
+  else if (g_menu_item_get_attribute (menuitem, "x-canonical-type", "s", NULL))
+    {
+      const gchar *namespace;
+
+      namespace = gtk_menu_tracker_item_get_action_namespace (item);
+      widget = create_custom_menu_item (menuitem, GTK_WIDGET (menu_shell), namespace);
+
+      if (widget == NULL)
+        return;
+
+      gtk_widget_show (widget);
+    }
   else
     {
       widget = gtk_model_menu_item_new ();
Index: gtk+3.0-3.10.7/gtk/gtkmenutrackeritem.c
===================================================================
--- gtk+3.0-3.10.7.orig/gtk/gtkmenutrackeritem.c	2014-02-27 12:44:39.405779725 +0100
+++ gtk+3.0-3.10.7/gtk/gtkmenutrackeritem.c	2014-02-27 12:44:39.397779725 +0100
@@ -786,3 +786,19 @@
   else
     gtk_menu_tracker_item_set_submenu_shown (self, shown);
 }
+
+GMenuItem *
+gtk_menu_tracker_item_get_menu_item (GtkMenuTrackerItem *self)
+{
+  g_return_if_fail (GTK_IS_MENU_TRACKER_ITEM (self));
+
+  return self->item;
+}
+
+const gchar *
+gtk_menu_tracker_item_get_action_namespace (GtkMenuTrackerItem *self)
+{
+  g_return_if_fail (GTK_IS_MENU_TRACKER_ITEM (self));
+
+  return self->action_namespace;
+}
Index: gtk+3.0-3.10.7/gtk/gtkmenutrackeritem.h
===================================================================
--- gtk+3.0-3.10.7.orig/gtk/gtkmenutrackeritem.h	2014-02-27 12:44:39.405779725 +0100
+++ gtk+3.0-3.10.7/gtk/gtkmenutrackeritem.h	2014-02-27 12:44:39.401779725 +0100
@@ -81,4 +81,8 @@
 
 gboolean                gtk_menu_tracker_item_get_submenu_shown         (GtkMenuTrackerItem *self);
 
+GMenuItem *             gtk_menu_tracker_item_get_menu_item             (GtkMenuTrackerItem *self);
+
+const gchar *           gtk_menu_tracker_item_get_action_namespace      (GtkMenuTrackerItem *self);
+
 #endif
Index: gtk+3.0-3.10.7/gtk/ubuntu-private.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gtk+3.0-3.10.7/gtk/ubuntu-private.h	2014-02-27 12:44:39.401779725 +0100
@@ -0,0 +1,32 @@
+/*
+* Copyright 2013 Canonical Ltd.
+*
+* This program is free software: you can redistribute it and/or modify it
+* under the terms of the GNU General Public License version 3, as published
+* by the Free Software Foundation.
+*
+* This program is distributed in the hope that it will be useful, but
+* WITHOUT ANY WARRANTY; without even the implied warranties of
+* MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
+* PURPOSE.  See the GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program.  If not, see <http://www.gnu.org/licenses/>.
+*
+* Authors:
+*     Lars Uebernickel <lars.uebernickel@canonical.com>
+*/
+
+/*
+ * Warning: this file is not part of gtk+, but an Ubuntu-specific extension.
+ * The API provided here is meant to be used only from Unity.
+ *
+ * Applications should not use this.
+ */
+
+#ifndef __UBUNTU_PRIVATE_H__
+#define __UBUNTU_PRIVATE_H__
+
+#include "ubuntumenuitemfactory.h"
+
+#endif
Index: gtk+3.0-3.10.7/gtk/ubuntumenuitemfactory.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gtk+3.0-3.10.7/gtk/ubuntumenuitemfactory.c	2014-02-27 12:44:39.401779725 +0100
@@ -0,0 +1,70 @@
+/*
+* Copyright 2013 Canonical Ltd.
+*
+* This program is free software: you can redistribute it and/or modify it
+* under the terms of the GNU General Public License version 3, as published
+* by the Free Software Foundation.
+*
+* This program is distributed in the hope that it will be useful, but
+* WITHOUT ANY WARRANTY; without even the implied warranties of
+* MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
+* PURPOSE.  See the GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program.  If not, see <http://www.gnu.org/licenses/>.
+*
+* Authors:
+*     Lars Uebernickel <lars.uebernickel@canonical.com>
+*/
+
+#include "config.h"
+#include "ubuntumenuitemfactory.h"
+
+G_DEFINE_INTERFACE_WITH_CODE (UbuntuMenuItemFactory, ubuntu_menu_item_factory, G_TYPE_OBJECT,
+  GIOExtensionPoint *ep = g_io_extension_point_register (UBUNTU_MENU_ITEM_FACTORY_EXTENSION_POINT_NAME);
+  g_io_extension_point_set_required_type (ep, g_define_type_id);)
+
+/*
+ * ubuntu_menu_item_factory_get_all:
+ *
+ * Returns a static list of all registered factories.
+ */
+GList *
+ubuntu_menu_item_factory_get_all (void)
+{
+  static GList *factories = NULL;
+
+  if (factories == NULL)
+    {
+      GIOExtensionPoint *ep;
+      GList *it;
+
+      g_type_ensure (UBUNTU_TYPE_MENU_ITEM_FACTORY);
+      ep = g_io_extension_point_lookup (UBUNTU_MENU_ITEM_FACTORY_EXTENSION_POINT_NAME);
+      for (it = g_io_extension_point_get_extensions (ep); it != NULL; it = it->next)
+        {
+          GIOExtension *ext = it->data;
+          UbuntuMenuItemFactory *factory;
+
+          factory = g_object_new (g_io_extension_get_type (ext), NULL);
+          factories = g_list_prepend (factories, factory);
+        }
+      factories = g_list_reverse (factories);
+    }
+
+  return factories;
+}
+
+static void
+ubuntu_menu_item_factory_default_init (UbuntuMenuItemFactoryInterface *iface)
+{
+}
+
+GtkMenuItem *
+ubuntu_menu_item_factory_create_menu_item (UbuntuMenuItemFactory *factory,
+                                           const gchar           *type,
+                                           GMenuItem             *menuitem,
+                                           GActionGroup          *actions)
+{
+  return UBUNTU_MENU_ITEM_FACTORY_GET_IFACE (factory)->create_menu_item (factory, type, menuitem, actions);
+}
Index: gtk+3.0-3.10.7/gtk/ubuntumenuitemfactory.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gtk+3.0-3.10.7/gtk/ubuntumenuitemfactory.h	2014-02-27 12:44:39.401779725 +0100
@@ -0,0 +1,61 @@
+/*
+* Copyright 2013 Canonical Ltd.
+*
+* This program is free software: you can redistribute it and/or modify it
+* under the terms of the GNU General Public License version 3, as published
+* by the Free Software Foundation.
+*
+* This program is distributed in the hope that it will be useful, but
+* WITHOUT ANY WARRANTY; without even the implied warranties of
+* MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
+* PURPOSE.  See the GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program.  If not, see <http://www.gnu.org/licenses/>.
+*
+* Authors:
+*     Lars Uebernickel <lars.uebernickel@canonical.com>
+*/
+
+#ifndef __UBUNTU_MENU_ITEM_FACTORY_H__
+#define __UBUNTU_MENU_ITEM_FACTORY_H__
+
+#include <gtk/gtkmenuitem.h>
+
+G_BEGIN_DECLS
+
+#define UBUNTU_TYPE_MENU_ITEM_FACTORY         (ubuntu_menu_item_factory_get_type ())
+#define UBUNTU_MENU_ITEM_FACTORY(o)           (G_TYPE_CHECK_INSTANCE_CAST ((o), UBUNTU_TYPE_MENU_ITEM_FACTORY, UbuntuMenuItemFactory))
+#define UBUNTU_IS_MENU_ITEM_FACTORY(o)        (G_TYPE_CHECK_INSTANCE_TYPE ((o), UBUNTU_TYPE_MENU_ITEM_FACTORY))
+#define UBUNTU_MENU_ITEM_FACTORY_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), UBUNTU_TYPE_MENU_ITEM_FACTORY, UbuntuMenuItemFactoryInterface))
+
+#define UBUNTU_MENU_ITEM_FACTORY_EXTENSION_POINT_NAME "ubuntu-menu-item-factory"
+
+typedef struct _UbuntuMenuItemFactoryInterface UbuntuMenuItemFactoryInterface;
+typedef struct _UbuntuMenuItemFactory          UbuntuMenuItemFactory;
+
+struct _UbuntuMenuItemFactoryInterface
+{
+  GTypeInterface iface;
+
+  GtkMenuItem * (*create_menu_item)  (UbuntuMenuItemFactory *factory,
+                                      const gchar           *type,
+                                      GMenuItem             *menuitem,
+                                      GActionGroup          *actions);
+};
+
+GDK_AVAILABLE_IN_3_10
+GList *                 ubuntu_menu_item_factory_get_all                (void);
+
+GDK_AVAILABLE_IN_3_10
+GType                   ubuntu_menu_item_factory_get_type               (void);
+
+GDK_AVAILABLE_IN_3_10
+GtkMenuItem *           ubuntu_menu_item_factory_create_menu_item       (UbuntuMenuItemFactory *factory,
+                                                                         const gchar           *type,
+                                                                         GMenuItem             *menuitem,
+                                                                         GActionGroup          *actions);
+
+G_END_DECLS
+
+#endif
