--- setup.py
+++ setup.py
@@ -17,7 +17,17 @@
 from distutils.spawn import find_executable
 
 # This global variable is used to hold the list of modules to be disabled.
-disabled_module_list = []
+pdm_env = "PYTHON_DISABLE_MODULES"
+if pdm_env in os.environ:
+    disabled_module_list = os.environ[pdm_env].split()
+else:
+    disabled_module_list = []
+
+pds_env = "PYTHON_DISABLE_SSL"
+if pds_env in os.environ:
+    disable_ssl = os.environ[pds_env]
+else:
+    disable_ssl = 0
 
 def add_dir_to_list(dirlist, dir):
     """Add the directory 'dir' to the list 'dirlist' (at the front) if
@@ -362,6 +372,7 @@
             os.unlink(tmpfile)
 
     def detect_modules(self):
+        global disable_ssl
         # Ensure that /usr/local is always used
         add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
         add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
@@ -668,7 +679,7 @@
         ssl_incs = find_file('openssl/ssl.h', inc_dirs,
                              search_for_ssl_incs_in
                              )
-        if ssl_incs is not None:
+        if ssl_incs is not None and not disable_ssl:
             krb5_h = find_file('krb5.h', inc_dirs,
                                ['/usr/kerberos/include'])
             if krb5_h:
@@ -679,7 +690,8 @@
                                      ] )
 
         if (ssl_incs is not None and
-            ssl_libs is not None):
+            ssl_libs is not None and
+            not disable_ssl):
             exts.append( Extension('_ssl', ['_ssl.c'],
                                    include_dirs = ssl_incs,
                                    library_dirs = ssl_libs,
@@ -712,7 +724,7 @@
 
         #print('openssl_ver = 0x%08x' % openssl_ver)
 
-        if ssl_incs is not None and ssl_libs is not None:
+        if ssl_incs is not None and ssl_libs is not None and not disable_ssl:
             if openssl_ver >= 0x00907000:
                 # The _hashlib module wraps optimized implementations
                 # of hash functions from the OpenSSL library.
@@ -727,15 +739,14 @@
         else:
             missing.append('_hashlib')
 
-        if openssl_ver < 0x00908000:
-            # OpenSSL doesn't do these until 0.9.8 so we'll bring our own hash
-            exts.append( Extension('_sha256', ['sha256module.c']) )
-            exts.append( Extension('_sha512', ['sha512module.c']) )
-
-        if openssl_ver < 0x00907000:
-            # no openssl at all, use our own md5 and sha1
-            exts.append( Extension('_md5', ['md5module.c']) )
-            exts.append( Extension('_sha1', ['sha1module.c']) )
+        ### Build these unconditionally so emerge won't fail
+        ### when openssl is dropped/broken etc.
+        exts.append( Extension('_sha256', ['sha256module.c']) )
+        exts.append( Extension('_sha512', ['sha512module.c']) )
+
+        exts.append( Extension('_md5', ['md5module.c']) )
+        exts.append( Extension('_sha1', ['sha1module.c']) )
+        ###
 
         # Modules that provide persistent dictionary-like semantics.  You will
         # probably want to arrange for at least one of them to be available on
