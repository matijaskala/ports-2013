From 7c861d948f766f9624a13d0ee7af03ba9d4cef48 Mon Sep 17 00:00:00 2001
From: Dominik Haumann <dhaumann@kde.org>
Date: Mon, 10 Jul 2017 22:01:42 +0200
Subject: Haskell: fix unit tests

BUG: 382169
---
 autotests/folding/highlight.hs.fold  |  10 ++
 autotests/html/highlight.hs.html     |  10 ++
 autotests/reference/highlight.hs.ref |   4 +-
 data/syntax/haskell.xml              | 198 +++++++++++++++++------------------
 4 files changed, 121 insertions(+), 101 deletions(-)

diff --git a/autotests/folding/highlight.hs.fold b/autotests/folding/highlight.hs.fold
index 4aa90e2..9b41478 100644
--- a/autotests/folding/highlight.hs.fold
+++ b/autotests/folding/highlight.hs.fold
@@ -122,3 +122,13 @@ RealFrac, Real, Show
 -- data constructors
 
 EQ, False, GT, Just, LT, Left, Nothing, Right, True
+
+-- pragma with compiler flags
+
+{-# OPTIONS_GHC -fno-warn-orphans #-}
+
+-- multiline pragma with language extensions
+
+{-# LANGUAGE OverlappingInstances,
+             BangPatterns
+#-}
diff --git a/autotests/html/highlight.hs.html b/autotests/html/highlight.hs.html
index 0551dc0..664d9f4 100644
--- a/autotests/html/highlight.hs.html
+++ b/autotests/html/highlight.hs.html
@@ -128,4 +128,14 @@ justtesting''	<span style="color:#b08000;">9</span>	<span style="color:#644a9b;"
 <span style="color:#898887;">-- data constructors</span>
 
 <span style="font-weight:bold;">EQ</span>, <span style="font-weight:bold;">False</span>, <span style="font-weight:bold;">GT</span>, <span style="font-weight:bold;">Just</span>, <span style="font-weight:bold;">LT</span>, <span style="font-weight:bold;">Left</span>, <span style="font-weight:bold;">Nothing</span>, <span style="font-weight:bold;">Right</span>, <span style="font-weight:bold;">True</span>
+
+<span style="color:#898887;">-- pragma with compiler flags</span>
+
+<span style="color:#006e28;">{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
+
+<span style="color:#898887;">-- multiline pragma with language extensions</span>
+
+<span style="color:#006e28;">{-# LANGUAGE OverlappingInstances,</span>
+             <span style="color:#0057ae;">BangPatterns</span>
+<span style="color:#006e28;">#-}</span>
 </pre></body></html>
diff --git a/autotests/reference/highlight.hs.ref b/autotests/reference/highlight.hs.ref
index cc05ebf..5b9a108 100644
--- a/autotests/reference/highlight.hs.ref
+++ b/autotests/reference/highlight.hs.ref
@@ -130,5 +130,5 @@
 <Comment>-- multiline pragma with language extensions</Comment><br/>
 <dsNormal></dsNormal><br/>
 <Pragma>{-# LANGUAGE OverlappingInstances,</Pragma><br/>
-<Pragma>             BangPatterns</Pragma><br/>
-<Pragma>#-}</Pragma><br/>
+<Normal>             </Normal><Type>BangPatterns</Type><br/>
+<C Preprocessor>#-}</C Preprocessor><br/>
diff --git a/data/syntax/haskell.xml b/data/syntax/haskell.xml
index d0fa213..e5d54bd 100644
--- a/data/syntax/haskell.xml
+++ b/data/syntax/haskell.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE language SYSTEM "language.dtd">
-<language name="Haskell" version="6" kateversion="3.4" section="Sources" extensions="*.hs;*.chs" mimetype="text/x-haskell" author="Nicolas Wu (zenzike@gmail.com)" license="LGPL" indenter="haskell" style="haskell">
+<language name="Haskell" version="7" kateversion="3.4" section="Sources" extensions="*.hs;*.chs" mimetype="text/x-haskell" author="Nicolas Wu (zenzike@gmail.com)" license="LGPL" indenter="haskell" style="haskell">
   <highlighting>
   <list name="keywords">
     <item> case </item>
@@ -335,124 +335,124 @@
     <item> hiding </item>
   </list>
   <list name="language_pragmas">
-    <item> OverlappingInstances </item>
-    <item> UndecidableInstances </item>
-    <item> IncoherentInstances </item>
+    <item> AllowAmbiguousTypes </item>
+    <item> ApplicativeDo </item>
+    <item> Arrows </item>
+    <item> AutoDeriveTypeable </item>
+    <item> BangPatterns </item>
+    <item> BinaryLiterals </item>
+    <item> CApiFFI </item>
+    <item> CPP </item>
+    <item> ConstrainedClassMethods </item>
+    <item> ConstraintKinds </item>
+    <item> DataKinds </item>
+    <item> DatatypeContexts </item>
+    <item> DefaultSignatures </item>
+    <item> DeriveAnyClass </item>
+    <item> DeriveDataTypeable </item>
+    <item> DeriveFoldable </item>
+    <item> DeriveFunctor </item>
+    <item> DeriveGeneric </item>
+    <item> DeriveLift </item>
+    <item> DeriveTraversable </item>
+    <item> DisambiguateRecordFields </item>
+    <item> DoAndIfThenElse </item>
     <item> DoRec </item>
-    <item> RecursiveDo </item>
-    <item> ParallelListComp </item>
-    <item> MultiParamTypeClasses </item>
-    <item> MonomorphismRestriction </item>
-    <item> FunctionalDependencies </item>
-    <item> Rank2Types </item>
-    <item> RankNTypes </item>
-    <item> PolymorphicComponents </item>
+    <item> DuplicateRecordFields </item>
+    <item> EmptyCase </item>
+    <item> EmptyDataDecls </item>
     <item> ExistentialQuantification </item>
-    <item> ScopedTypeVariables </item>
-    <item> PatternSignatures </item>
-    <item> ImplicitParams </item>
+    <item> ExplicitForAll </item>
+    <item> ExplicitNamespaces </item>
+    <item> ExtendedDefaultRules </item>
+    <item> ExtensibleRecords </item>
     <item> FlexibleContexts </item>
     <item> FlexibleInstances </item>
-    <item> EmptyDataDecls </item>
-    <item> CPP </item>
-    <item> KindSignatures </item>
-    <item> BangPatterns </item>
-    <item> TypeSynonymInstances </item>
-    <item> TemplateHaskell </item>
     <item> ForeignFunctionInterface </item>
-    <item> Arrows </item>
-    <item> Generics </item>
-    <item> ImplicitPrelude </item>
-    <item> NamedFieldPuns </item>
-    <item> PatternGuards </item>
+    <item> FunctionalDependencies </item>
+    <item> GADTSyntax </item>
+    <item> GADTs </item>
+    <item> GHCForeignImportPrim </item>
     <item> GeneralizedNewtypeDeriving </item>
-    <item> ExtensibleRecords </item>
-    <item> RestrictedTypeSynonyms </item>
+    <item> Generics </item>
     <item> HereDocuments </item>
-    <item> MagicHash </item>
-    <item> TypeFamilies </item>
-    <item> StandaloneDeriving </item>
-    <item> UnicodeSyntax </item>
-    <item> UnliftedFFITypes </item>
+    <item> ImplicitParams </item>
+    <item> ImplicitPrelude </item>
+    <item> ImpredicativeTypes </item>
+    <item> IncoherentInstances </item>
+    <item> InstanceSigs </item>
     <item> InterruptibleFFI </item>
-    <item> CApiFFI </item>
+    <item> JavaScriptFFI </item>
+    <item> KindSignatures </item>
+    <item> LambdaCase </item>
     <item> LiberalTypeSynonyms </item>
-    <item> TypeOperators </item>
-    <item> RecordWildCards </item>
-    <item> RecordPuns </item>
-    <item> DisambiguateRecordFields </item>
-    <item> TraditionalRecordSyntax </item>
-    <item> OverloadedStrings </item>
-    <item> GADTs </item>
-    <item> GADTSyntax </item>
+    <item> MagicHash </item>
+    <item> MonadComprehensions </item>
+    <item> MonadFailDesugaring </item>
+    <item> MonoLocalBinds </item>
     <item> MonoPatBinds </item>
-    <item> RelaxedPolyRec </item>
-    <item> ExtendedDefaultRules </item>
-    <item> UnboxedTuples </item>
-    <item> DeriveDataTypeable </item>
-    <item> DeriveGeneric </item>
-    <item> DefaultSignatures </item>
-    <item> InstanceSigs </item>
-    <item> ConstrainedClassMethods </item>
-    <item> PackageImports </item>
-    <item> ImpredicativeTypes </item>
+    <item> MonomorphismRestriction </item>
+    <item> MultiParamTypeClasses </item>
+    <item> MultiWayIf </item>
+    <item> NPlusKPatterns </item>
+    <item> NamedFieldPuns </item>
+    <item> NamedWildCards </item>
+    <item> NegativeLiterals </item>
     <item> NewQualifiedOperators </item>
+    <item> NondecreasingIndentation </item>
+    <item> NullaryTypeClasses </item>
+    <item> NumDecimals </item>
+    <item> OverlappingInstances </item>
+    <item> OverloadedLabels </item>
+    <item> OverloadedLists </item>
+    <item> OverloadedStrings </item>
+    <item> PackageImports </item>
+    <item> ParallelArrays </item>
+    <item> ParallelListComp </item>
+    <item> PartialTypeSignatures </item>
+    <item> PatternGuards </item>
+    <item> PatternSignatures </item>
+    <item> PatternSynonyms </item>
+    <item> PolyKinds </item>
+    <item> PolymorphicComponents </item>
     <item> PostfixOperators </item>
     <item> QuasiQuotes </item>
-    <item> TransformListComp </item>
-    <item> MonadComprehensions </item>
-    <item> ViewPatterns </item>
-    <item> XmlSyntax </item>
-    <item> RegularPatterns </item>
-    <item> TupleSections </item>
-    <item> GHCForeignImportPrim </item>
-    <item> NPlusKPatterns </item>
-    <item> DoAndIfThenElse </item>
-    <item> MultiWayIf </item>
-    <item> LambdaCase </item>
+    <item> Rank2Types </item>
+    <item> RankNTypes </item>
     <item> RebindableSyntax </item>
-    <item> ExplicitForAll </item>
-    <item> DatatypeContexts </item>
-    <item> MonoLocalBinds </item>
-    <item> DeriveFunctor </item>
-    <item> DeriveTraversable </item>
-    <item> DeriveFoldable </item>
-    <item> NondecreasingIndentation </item>
-    <item> SafeImports </item>
-    <item> Safe </item>
-    <item> Trustworthy </item>
-    <item> Unsafe </item>
-    <item> ConstraintKinds </item>
-    <item> PolyKinds </item>
-    <item> DataKinds </item>
-    <item> ParallelArrays </item>
+    <item> RecordPuns </item>
+    <item> RecordWildCards </item>
+    <item> RecursiveDo </item>
+    <item> RegularPatterns </item>
+    <item> RelaxedPolyRec </item>
+    <item> RestrictedTypeSynonyms </item>
     <item> RoleAnnotations </item>
-    <item> OverloadedLists </item>
-    <item> EmptyCase </item>
-    <item> AutoDeriveTypeable </item>
-    <item> NegativeLiterals </item>
-    <item> BinaryLiterals </item>
-    <item> NumDecimals </item>
-    <item> NullaryTypeClasses </item>
-    <item> ExplicitNamespaces </item>
-    <item> AllowAmbiguousTypes </item>
-    <item> JavaScriptFFI </item>
-    <item> PatternSynonyms </item>
-    <item> PartialTypeSignatures </item>
-    <item> NamedWildCards </item>
-    <item> DeriveAnyClass </item>
-    <item> DeriveLift </item>
+    <item> Safe </item>
+    <item> SafeImports </item>
+    <item> ScopedTypeVariables </item>
+    <item> StandaloneDeriving </item>
     <item> StaticPointers </item>
-    <item> StrictData </item>
     <item> Strict </item>
-    <item> ApplicativeDo </item>
-    <item> DuplicateRecordFields </item>
+    <item> StrictData </item>
+    <item> TemplateHaskell </item>
+    <item> TemplateHaskellQuotes </item>
+    <item> TraditionalRecordSyntax </item>
+    <item> TransformListComp </item>
+    <item> Trustworthy </item>
+    <item> TupleSections </item>
     <item> TypeApplications </item>
+    <item> TypeFamilies </item>
     <item> TypeInType </item>
+    <item> TypeOperators </item>
+    <item> TypeSynonymInstances </item>
+    <item> UnboxedTuples </item>
+    <item> UndecidableInstances </item>
     <item> UndecidableSuperClasses </item>
-    <item> MonadFailDesugaring </item>
-    <item> TemplateHaskellQuotes </item>
-    <item> OverloadedLabels </item>
+    <item> UnicodeSyntax </item>
+    <item> UnliftedFFITypes </item>
+    <item> Unsafe </item>
+    <item> ViewPatterns </item>
+    <item> XmlSyntax </item>
   </list>
   <contexts>
     <context attribute="Normal" lineEndContext="#stay" name="code">
-- 
cgit v0.11.2
From efd1968c4a82f5a27dacf2147d555e68beee3c23 Mon Sep 17 00:00:00 2001
From: Dominik Haumann <dhaumann@kde.org>
Date: Mon, 10 Jul 2017 22:10:44 +0200
Subject: Haskell: next attempt to fix unit tests

---
 autotests/html/highlight.hs.html     | 2 +-
 autotests/reference/highlight.hs.ref | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/autotests/html/highlight.hs.html b/autotests/html/highlight.hs.html
index 664d9f4..d38d237 100644
--- a/autotests/html/highlight.hs.html
+++ b/autotests/html/highlight.hs.html
@@ -136,6 +136,6 @@ justtesting''	<span style="color:#b08000;">9</span>	<span style="color:#644a9b;"
 <span style="color:#898887;">-- multiline pragma with language extensions</span>
 
 <span style="color:#006e28;">{-# LANGUAGE OverlappingInstances,</span>
-             <span style="color:#0057ae;">BangPatterns</span>
+<span style="color:#006e28;">             BangPatterns</span>
 <span style="color:#006e28;">#-}</span>
 </pre></body></html>
diff --git a/autotests/reference/highlight.hs.ref b/autotests/reference/highlight.hs.ref
index 5b9a108..cc05ebf 100644
--- a/autotests/reference/highlight.hs.ref
+++ b/autotests/reference/highlight.hs.ref
@@ -130,5 +130,5 @@
 <Comment>-- multiline pragma with language extensions</Comment><br/>
 <dsNormal></dsNormal><br/>
 <Pragma>{-# LANGUAGE OverlappingInstances,</Pragma><br/>
-<Normal>             </Normal><Type>BangPatterns</Type><br/>
-<C Preprocessor>#-}</C Preprocessor><br/>
+<Pragma>             BangPatterns</Pragma><br/>
+<Pragma>#-}</Pragma><br/>
-- 
cgit v0.11.2
